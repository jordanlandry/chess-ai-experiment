import { Move } from "../../../board";

type Opening = {
  board: string[][];
  responses: Move[];
};

export const openings: Opening[] = [
  {
    board: [
      ["r", "n", "b", "q", "k", "b", "n", "r"],
      ["p", "p", "p", "p", "p", "p", "p", "p"],
      [" ", " ", " ", " ", " ", " ", " ", " "],
      [" ", " ", " ", " ", " ", " ", " ", " "],
      [" ", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", " ", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "K", "B", "N", "R"],
    ],
    responses: [{ from: 12, to: 28 }],
  },
  {
    board: [
      ["r", "n", "b", "q", "k", "b", "n", "r"],
      ["p", "p", "p", "p", " ", "p", "p", "p"],
      [" ", " ", " ", " ", " ", " ", " ", " "],
      [" ", " ", " ", " ", "p", " ", " ", " "],
      [" ", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "K", "B", " ", "R"],
    ],
    responses: [{ from: 1, to: 18 }],
  },
  {
    board: [
      ["r", " ", "b", "q", "k", "b", "n", "r"],
      ["p", "p", "p", "p", " ", "p", "p", "p"],
      [" ", " ", "n", " ", " ", " ", " ", " "],
      [" ", "B", " ", " ", "p", " ", " ", " "],
      [" ", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "K", " ", " ", "R"],
    ],
    responses: [{ from: 8, to: 16 }],
  },
  {
    board: [
      ["r", " ", "b", "q", "k", "b", "n", "r"],
      [" ", "p", "p", "p", " ", "p", "p", "p"],
      ["p", " ", "n", " ", " ", " ", " ", " "],
      [" ", " ", " ", " ", "p", " ", " ", " "],
      ["B", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "K", " ", " ", "R"],
    ],
    responses: [{ from: 6, to: 21 }],
  },
  {
    board: [
      ["r", " ", "b", "q", "k", "b", " ", "r"],
      [" ", "p", "p", "p", " ", "p", "p", "p"],
      ["p", " ", "n", " ", " ", "n", " ", " "],
      [" ", " ", " ", " ", "p", " ", " ", " "],
      ["B", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", " ", "R", "K", " "],
    ],
    responses: [{ from: 5, to: 12 }],
  },
  {
    board: [
      ["r", " ", "b", "q", "k", " ", " ", "r"],
      [" ", "p", "p", "p", "b", "p", "p", "p"],
      ["p", " ", "n", " ", " ", "n", " ", " "],
      [" ", " ", " ", " ", "p", " ", " ", " "],
      ["B", " ", " ", " ", "P", " ", " ", " "],
      [" ", " ", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "R", " ", "K", " "],
    ],
    responses: [{ from: 9, to: 25 }],
  },
  {
    board: [
      ["r", " ", "b", "q", "k", " ", " ", "r"],
      [" ", " ", "p", "p", "b", "p", "p", "p"],
      ["p", " ", "n", " ", " ", "n", " ", " "],
      [" ", "p", " ", " ", "p", " ", " ", " "],
      [" ", " ", " ", " ", "P", " ", " ", " "],
      [" ", "B", " ", " ", " ", "N", " ", " "],
      ["P", "P", "P", "P", " ", "P", "P", "P"],
      ["R", "N", "B", "Q", "R", " ", "K", " "],
    ],
    responses: [{ from: 4, to: 6, castle: true }],
  },
  // {
  //   board: [
  //     ["r", " ", "b", "q", " ", "r", "k", " "],
  //     [" ", " ", "p", "p", "b", "p", "p", "p"],
  //     ["p", " ", "n", " ", " ", "n", " ", " "],
  //     [" ", "p", " ", " ", "p", " ", " ", " "],
  //     [" ", " ", " ", " ", "P", " ", " ", " "],
  //     [" ", "B", "P", " ", " ", "N", " ", " "],
  //     ["P", "P", " ", "P", " ", "P", "P", "P"],
  //     ["R", "N", "B", "Q", "R", " ", "K", " "],
  //   ],
  //   responses: [{ from: 4, to: 6, castle: true }],
  // },
];
